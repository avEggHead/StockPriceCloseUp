name: efcore-migrations

on:
  workflow_dispatch:

env:
  APP_NAME: cja-mvc-demoproj
  RG_NAME: rg-cja-mvc-demoproj-eastus2
  SQL_ADMIN: sqladmin

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get runner public IP
        id: ip
        run: echo "ip=$(curl -s https://api.ipify.org)" >> $GITHUB_OUTPUT

      - name: Open temporary SQL firewall for runner
        run: |
          az sql server firewall-rule create \
            --resource-group $RG_NAME \
            --server ${APP_NAME}-sql \
            --name AllowGitHubRunner \
            --start-ip-address ${{ steps.ip.outputs.ip }} \
            --end-ip-address   ${{ steps.ip.outputs.ip }}

      - name: Install dotnet-ef tool
        run: |
          dotnet tool install --global dotnet-ef
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      # 👇 Get SQL Server FQDN dynamically
      - name: Get SQL FQDN
        id: sql
        run: |
          fqdn=$(az sql server show -g $RG_NAME -n ${APP_NAME}-sql --query fullyQualifiedDomainName -o tsv)
          echo "fqdn=$fqdn" >> $GITHUB_OUTPUT
          # Log connection string (without password for safety)
          echo "Using connection string:"
          echo "Server=tcp:$fqdn,1433;Initial Catalog=appdb;User ID=$SQL_ADMIN;Password=***;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"

      # 👇 Run migrations with dynamic FQDN
      - name: Run EF Core migrations (Database.Update)
        run: dotnet ef database update --project StockPriceCloseUp --startup-project StockPriceCloseUp --verbose
        env:
          ConnectionStrings__DefaultConnection: >-
            Server=tcp:${{ steps.sql.outputs.fqdn }},1433;
            Initial Catalog=appdb;
            User ID=${{ env.SQL_ADMIN }};
            Password=${{ secrets.SQL_PASSWORD }};
            Encrypt=True;
            TrustServerCertificate=False;
            Connection Timeout=30;

      - name: Close temporary SQL firewall rule
        if: always()
        run: |
          az sql server firewall-rule delete \
            --resource-group $RG_NAME \
            --server ${APP_NAME}-sql \
            --name AllowGitHubRunner
